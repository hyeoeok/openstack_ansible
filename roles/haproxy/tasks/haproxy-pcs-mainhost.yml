---
- name: Import Register
  import_tasks: haproxy-pcs-allhost.yml

- name: HA cluster user intigration
  command: pcs host auth {{ haproxy_member }} -u hacluster -p {{ haproxy_pwd }}
  register: pcs_member
  #when: corosync_conf is changed

- name: Checking File Corosync Auth file
  stat:
    path: /etc/corosync/authkey 
  register: corosync_auth  

- name: Corosync Auth Generate
  command: corosync-keygen
  when: not corosync_auth.stat.exists

#- name: HA cluster destroy
#  command: pcs cluster destroy
#  when: corosync_conf is changed

- name: Checking File Corosync pcsd known-hosts file
  stat:
    path: /var/lib/pcsd/known-hosts
  register: pcsd_known_hosts

- name: HA cluster auth setup
  command: pcs cluster auth -u hacluster -p {{ haproxy_pwd }}
  when: not pcsd_known_hosts.stat.exists

- name: wating for HA cluster known files
  wait_for:
    timeout: 10
  #when: not pcsd_known_hosts.stat.exists

- name: HA cluster setup
  command: pcs cluster setup openstack {{ haproxy_member }} --force
  #when: not pcsd_known_hosts.stat.exists

- name: pcs start all && enable
  command: "{{ item }}"
  with_items:
  - pcs cluster start --all
  - pcs cluster enable --all
  #when: not pcsd_known_hosts.stat.exists

- name: resource create
  command: "{{ item }}"
  with_items:
  - pcs property set stonith-enabled=false
  - pcs property set no-quorum-policy=ignore

- name: create internal vip
  command: "{{ item }}"
  with_items:
  - pcs resource create int_vip ocf:heartbeat:IPaddr2 ip={{ internal_vip_address }} nic={{ int_api_interface }} cidr_netmask={{ internal_vip_cidr }} op monitor interval=10s

- name: create external vip
  command: "{{ item }}"
  with_items:
  - pcs resource create pub_vip ocf:heartbeat:IPaddr2 ip={{ external_vip_address }} nic={{ external_api_interface }} cidr_netmask={{ external_vip_cidr }} op monitor interval=10s
  when: same_external_internal_vip == false

- name: haproxy interanl resource && clone
  command: "{{ item }}"
  with_items:
  - pcs resource create haproxy systemd:haproxy op monitor interval=20s timeout=20
  - pcs constraint order start int_vip then haproxy kind=Optional
  - pcs constraint colocation add haproxy with int_vip
  #when: corosync_conf is changed


- name: haproxy external resource && clone
  command: "{{ item }}"
  with_items:
  - pcs constraint order start pub_vip then int_vip kind=Optional
  - pcs constraint order start pub_vip then haproxy kind=Optional
  - pcs constraint colocation add int_vip with pub_vip
  - pcs constraint colocation add haproxy with pub_vip
  #when: external_vip_address is defined #and corosync_conf is changed
  when: same_external_internal_vip == false

- name: service restart
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
  - haproxy
  when: haproxy_conf is changed

