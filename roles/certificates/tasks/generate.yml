---
- name: Ensuring private internal directory exist
  file:
    path: "{{ internal_dir }}"
    state: "directory"
    mode: "0770"

- name: Ensuring private external directory exist
  file:
    path: "{{ external_dir }}"
    state: "directory"
    mode: "0770"

- block:
    - name: Creating external SSL configuration file
      template:
        src: "{{ item }}.j2"
        dest: "{{ certificates_dir }}/{{ item }}"
        mode: "0660"
      with_items:
        - "openssl-external.cnf"

    - name: Creating external Server Certificate key
      command: >
        openssl genrsa
        -out "{{ external_dir }}/external.key" 2048
      args:
        creates: "{{ external_dir }}/external.key"

    - name: Creating external Server Certificate signing request
      command: >
        openssl req
        -new
        -key "{{ external_dir }}/external.key"
        -out "{{ external_dir }}/external.csr"
        -config "{{ certificates_dir }}/openssl-external.cnf"
        -sha256
      args:
        creates: "{{ external_dir }}/external.csr"

    - name: Creating external Server Certificate
      command: >
        openssl x509
        -req
        -in "{{ external_dir }}/external.csr"
        -CA "{{ root_dir }}/root_ex.crt"
        -CAkey "{{ root_dir }}/root.key"
        -CAcreateserial
        -extfile "{{ certificates_dir }}/openssl-external.cnf"
        -out "{{ external_dir }}/external.crt"
        -days 365
        -sha256
      args:
        creates: "{{ external_dir }}/external.crt"

    - name: Setting permissions on external key
      file:
        path: "{{ external_dir }}/external.key"
        mode: "0660"
        state: file

    - name: Checking External_key PEM
      stat:
        path: "{{ external_dir}}/external_key.pem"
      register: external_key_pem

    - name: Checking External_cert PEM
      stat:
        path: "{{ external_dir}}/external_key.pem"
      register: external_cert_pem

    - name: Checking Internal_HAproxy PEM
      stat:
        path: "{{ external_dir}}/haproxy-external.pem"
      register: external_haproxy_pem

    - name: Transform external key PEM
      shell: /usr/bin/openssl rsa -in "{{ external_dir }}/external.key" -text > "{{ external_dir }}/external_key.pem"
      when: not external_key_pem.stat.exists

    - name: Transform external cert PEM
      shell: /usr/bin/openssl x509 -inform PEM -in "{{ external_dir }}/external.crt" > "{{ external_dir }}/external_crt.pem"
      when: not external_cert_pem.stat.exists

    - name: Create PEM File
      shell: /usr/bin/cat "{{ external_dir}}/external_key.pem" "{{ external_dir }}/external_crt.pem" > "{{ external_dir}}/haproxy-external.pem"
      when: not external_haproxy_pem.stat.exists

#    - name: Creating external Server PEM File
#      assemble:
#        regexp: \.(crt|key)$
#        src: "{{ external_dir }}"
#        dest: "{{ external_fqdn_cert }}"
#        mode: "0660"
  when:
    - enable_tls_external | bool

- block:
    - name: Copy the external PEM file to be the internal when internal + external are same network
      copy:
        src: "{{ external_cert }}"
        dest: "{{ internal_cert }}"
        remote_src: yes
        mode: "0660"
  when:
    - enable_tls_external | bool
    - enable_tls_internal | bool
    - same_external_internal_vip | bool

- block:
    - name: Creating internal SSL configuration file
      template:
        src: "{{ item }}.j2"
        dest: "{{ certificates_dir }}/{{ item }}"
        mode: "0660"
      with_items:
        - "openssl-internal.cnf"

    - name: Creating internal Server Certificate key
      command: >
        openssl genrsa
        -out "{{ internal_dir }}/internal.key" 2048
      args:
        creates: "{{ internal_dir }}/internal.key"

    - name: Creating internal Server Certificate signing request
      command: >
        openssl req
        -new
        -key "{{ internal_dir }}/internal.key"
        -out "{{ internal_dir }}/internal.csr"
        -config "{{ certificates_dir }}/openssl-internal.cnf"
        -sha256
      args:
        creates: "{{ internal_dir }}/internal.csr"

    - name: Creating internal Server Certificate
      command: >
        openssl x509
        -req
        -in "{{ internal_dir }}/internal.csr"
        -CA "{{ root_dir }}/root.crt"
        -CAkey "{{ root_dir }}/root.key"
        -CAcreateserial
        -extfile "{{ certificates_dir }}/openssl-internal.cnf"
        -out "{{ internal_dir }}/internal.crt"
        -days 365
        -sha256
      args:
        creates: "{{ internal_dir }}/internal.crt"

    - name: Setting permissions on internal key
      file:
        path: "{{ internal_dir }}/internal.key"
        mode: "0660"
        state: file
   
    - name: Checking Internal_key PEM 
      stat:
        path: "{{ internal_dir}}/internal_key.pem"
      register: internal_key_pem

    - name: Checking Internal_cert PEM 
      stat:
        path: "{{ internal_dir}}/internal_key.pem"
      register: internal_cert_pem

    - name: Checking Internal_HAproxy PEM 
      stat:
        path: "{{ internal_dir}}/haproxy-internal.pem"
      register: internal_haproxy_pem

    - name: Transform internal key PEM
      shell: /usr/bin/openssl rsa -in "{{ internal_dir }}/internal.key" -text > "{{ internal_dir }}/internal_key.pem"
      when: not internal_key_pem.stat.exists

    - name: Transform internal cert PEM
      shell: /usr/bin/openssl x509 -inform PEM -in "{{ internal_dir }}/internal.crt" > "{{ internal_dir }}/internal_crt.pem"
      when: not internal_cert_pem.stat.exists

    - name: Create PEM File
      shell: /usr/bin/cat "{{ internal_dir}}/internal_key.pem" "{{ internal_dir }}/internal_crt.pem" > "{{ internal_dir}}/haproxy-internal.pem"
      when: not internal_haproxy_pem.stat.exists
         
  when:
    - enable_tls_internal | bool
    - not same_external_internal_vip | bool

- name: Internal HAproxy PEM Pull
  fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: true
  with_items:
    - { src: "{{ internal_dir}}/haproxy-internal.pem",dest: roles/certificates/files/ }
  when: enable_tls_internal | bool

- name: External HAproxy PEM Pull
  fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: true
  with_items:
    - { src: "{{ external_dir}}/haproxy-external.pem",dest: roles/certificates/files/ }
  when: enable_tls_internal | bool

#openssl rsa -in private.key -text > private.pem

#openssl x509 -inform PEM -in certificate.crt > public.pem

#cat private.pem public.pem > haproxy-internal.pem
#- name: Ensuring private internal directory exist
#  file:
#    path: "{{ internal_dir }}/haproxy-internal.pem"
#    state: "file"
#    mode: "0770"
#  when:
#    - enable_tls_internal | bool
#    - not same_external_internal_vip | bool

#- name: Ensuring private external directory exist
#  file:
#    path: "{{ external_dir }}/haproxy-external.pem"
#    state: "file"
#    mode: "0660"
#  when:
#    - enable_tls_external | bool
#    - not same_external_internal_vip | bool





    #- name: Creating internal Server PEM File
    #  assemble:
    #    regexp: \.(crt|key)$
    #    src: "{{ internal_dir }}"
    #    dest: "{{ internal_fqdn_cert }}"
    #    mode: "0660"
