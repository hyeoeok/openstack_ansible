[DEFAULT]
log_dir = /var/log/nova
lock_path = /var/lock/nova
state_path = /var/lib/nova

my_ip = {{ hostvars[inventory_hostname]['ansible_'~int_api_interface]['ipv4']['address'] }}

transport_url = rabbit://{% for host in groups['controller'] %}{{ rabbitmq_name }}:{{ rabbitmq_password }}@{{ hostvars[host]['ansible_'~int_api_interface]['ipv4']['address'] }}:5672{% if not loop.last %},{% endif %}{% endfor %}

{% if enable_tls_internal  %}
cafile = {{ internal_fqdn_cert }}
{% endif %}


use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver
allow_resize_to_same_host = true
resize_confirm_window = 1

[api_database]
connection = mysql+pymysql://nova:{{ db_password }}@{{ internal_vip_address }}/nova_api
[database]
connection = mysql+pymysql://nova:{{ db_password }}@{{ internal_vip_address }}/nova

[api]
auth_strategy = keystone

[cache]
enabled = true
backend = oslo_cache.memcache_pool
memcached_servers = {% for host in groups['controller'] %}{{ hostvars[host]['ansible_'~int_api_interface]['ipv4']['address'] }}:11211{% if not loop.last %},{% endif %}{% endfor %}

[keystone_authtoken]
{% if enable_tls_internal  %}
www_authenticate_uri = https://{{ internal_vip_address }}:15000
auth_url = https://{{ internal_vip_address }}:15000
cafile = {{ internal_fqdn_cert }}
{% elif enable_tls_internal == false %}
www_authenticate_uri = http://{{ internal_vip_address }}:15000
auth_url = http://{{ internal_vip_address }}:15000
{% endif %}
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = {{ keystone_pass }}
memcached_servers = {% for host in groups['controller'] %}{{ hostvars[host]['ansible_'~int_api_interface]['ipv4']['address'] }}:11211{% if not loop.last %},{% endif %}{% endfor %}

[cells]
enable=False

[oslo_concurrency]
lock_path= /var/lib/nova/tmp

[wsgi]
api_paste_config=/etc/nova/api-paste.ini



[vnc]
enabled = True
server_listen = $my_ip
server_proxyclient_address = $my_ip
novncproxy_host = 0.0.0.0

{% if enable_tls_internal  %}
novncproxy_base_url = https://{{ internal_vip_address }}:16080/vnc_auto.html
{% elif enable_tls_internal == false %}
novncproxy_base_url = http://{{ internal_vip_address }}:16080/vnc_auto.html
{% endif %}




[oslo_messaging_rabbit]

[glance]
{% if enable_tls_internal  %}
api_servers = https://{{ internal_vip_address }}:19292
cafile = {{ internal_fqdn_cert }}
{% elif enable_tls_internal == false %}
api_servers = http://{{ internal_vip_address }}:19292
{% endif %}



[cinder]
os_region_name = RegionOne
endpoint_type = internal
{% if enable_tls_internal  %}
cafile = {{ internal_fqdn_cert }}
{% endif %}



[placement]
os_region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default

{% if enable_tls_internal  %}
auth_url = https://{{ internal_vip_address }}:15000/v3
cafile = {{ internal_fqdn_cert }}
{% elif enable_tls_internal == false %}
auth_url = http://{{ internal_vip_address }}:15000/v3
{% endif %}

username = placement
password = {{ keystone_pass }}
endpoint_type = internal

[neutron]

{% if enable_tls_internal  %}
auth_url = https://{{ internal_vip_address }}:15000/v3
cafile = {{ internal_fqdn_cert }}
{% elif enable_tls_internal == false %}
auth_url = http://{{ internal_vip_address }}:15000/v3
{% endif %}

auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = {{ keystone_pass }}
service_metadata_proxy = true
metadata_proxy_shared_secret = {{ keystone_pass }}



[libvirt]
inject_partition = -2
use_virtio_for_bridges = True
virt_type = kvm
inject_password = False
disk_cachemodes = network=writeback
live_migration_uri = qemu+tcp://%s/system
cpu_mode = host-model
live_migration_permit_auto_converge=true
